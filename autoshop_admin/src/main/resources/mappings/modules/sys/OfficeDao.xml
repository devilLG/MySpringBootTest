<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zhilai.master.modules.sys.dao.OfficeDao">

<resultMap type="com.zhilai.master.modules.sys.entity.Office" id="OfficeResultMap">
 		<id property="logid" column="logid"/>
 		<result property="parent_id" column="parent_id" />
 		<result property="parent_ids" column="parent_ids" />
 		<result property="name" column="name" />
 		<result property="sort" column="sort" />
 		<result property="area_id" column="area_id" />
 		<result property="code" column="code" />
 		<result property="corp_id" column="corp_id" />
 		<result property="type" column="type" />
 		<result property="grade" column="grade" />
 		<result property="address" column="address" />
 		<result property="zip_code" column="zip_code" />
 		<result property="master" column="master" />
 		<result property="phone" column="phone" />
 		<result property="fax" column="fax" />
 		<result property="email" column="email" />
 		<result property="USEABLE" column="USEABLE" />
 		<result property="PRIMARY_PERSON" column="PRIMARY_PERSON" />
 		<result property="DEPUTY_PERSON" column="DEPUTY_PERSON" />
 		<result property="create_by" column="create_by" />
 		<result property="create_date" column="create_date" />
 		<result property="update_by" column="update_by" />
 		<result property="update_date" column="update_date" />
 		<result property="remarks" column="remarks" />
 		<result property="del_flag" column="del_flag" />
 		<result property="auth_id" column="auth_id" />
 		<result property="auth_name" column="auth_name" />
 		<result property="auth_begin" column="auth_begin" />
 		<result property="auth_end" column="auth_end" />
 		<result property="auth_state" column="auth_state" />
 	</resultMap>

	<sql id="officeColumns">
		a.logid,
		a.parent_id AS "parent.logid",
		a.parent_ids,
		a.area_id AS "area.logid",
		a.code,
		a.corp_id AS "corpId",
		a.auth_id AS "authId",
		a.auth_name AS "authName",
		a.auth_begin AS "authBegin",
		a.auth_end AS "authEnd",
		a.auth_state AS "authState", 
		a.name,
		a.sort,
		a.type,
		a.grade,
		a.address, 
		a.zip_code, 
		a.master, 
		a.phone, 
		a.fax, 
		a.email, 
		a.remarks,
		a.create_by AS "createBy.logid",
		a.create_date,
		a.update_by AS "updateBy.logid",
		a.update_date,
		a.del_flag,
		a.useable AS useable,
		a.primary_person AS "primaryPerson.logid",
		a.deputy_person AS "deputyPerson.logid",
		p.name AS "parent.name",
		ar.name AS "area.name",
		ar.parent_ids AS "area.parentIds",
		pp.name AS "primaryPerson.name",
		dp.name AS "deputyPerson.name"
	</sql>
	
	<sql id="officeJoins">
		LEFT JOIN sys_office p ON p.logid = a.parent_id
		LEFT JOIN sys_area ar ON ar.logid = a.area_id
		LEFT JOIN sys_user pp ON pp.logid = a.primary_person
		LEFT JOIN sys_user dp ON dp.logid = a.deputy_person
    </sql>
	
	<select id="get" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.logid = #{logid}
	</select>
	
	<select id="findList" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<!-- 数据范围过滤 
		${sqlMap.dsf}-->
		<if test="parentIds != null and parentIds != ''">
		AND (a.logid = #{parentIds}
			OR a.parent_ids  LIKE CONCAT('%',#{parentIds}, '%')
		)
		</if>
		OR a.logid = #{currentUser.office.logid}
		ORDER BY a.code
	</select>
			
	<select id="findAllList" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		<if test="parentIds != null and parentIds != ''">
		AND (a.logid = #{parentIds}
			OR a.parent_ids  LIKE CONCAT('%',#{parentIds}, '%')
		)
		</if>
		ORDER BY a.code
	</select>
	
	<select id="findByParentIdsLike" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		<!-- WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND (a.logid = #{parentIds}
			OR a.parent_ids  LIKE CONCAT('%',#{parentIds}, '%')
		) -->
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} 
		<if test="parentIds != null and parentIds != ''">
		 AND (a.logid = #{logid} OR a.parent_ids LIKE CONCAT('%',#{parentIds}, '%'))
		</if>
		ORDER BY a.code
	</select>
	
	<select id="findByCorpId" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.corp_id = #{corpId}
	</select>
	
	<select id="findAllCorp" resultType="Office">
		SELECT
			<include refid="officeColumns"/>
		FROM sys_office a
		<include refid="officeJoins"/>
		WHERE a.type = '1'
	</select>
	
	<insert id="insert">
		INSERT INTO sys_office(
			logid, 
			parent_id, 
			parent_ids, 
			area_id, 
			corp_id,
			code, 
			name,
			sort, 
			type, 
			grade, 
			address, 
			zip_code, 
			master, 
			phone, 
			fax, 
			email, 
			create_by, 
			create_date, 
			update_by, 
			update_date, 
			remarks, 
			del_flag,
			useable,
			primary_person,
			deputy_person,
			auth_id, 
			auth_name,
			auth_begin,
			auth_end,
			auth_state
		) VALUES (
			#{logid}, 
			#{parent.logid}, 
			#{parentIds}, 
			#{area.logid}, 
			#{corpId}, 
			#{code}, 
			#{name},
			#{sort}, 
			#{type}, 
			#{grade}, 
			#{address}, 
			#{zipCode}, 
			#{master}, 
			#{phone}, 
			#{fax}, 
			#{email}, 
			#{createBy.logid}, 
			#{createDate}, 
			#{updateBy.logid}, 
			#{updateDate}, 
			#{remarks}, 
			#{delFlag},
			#{useable},
			#{primaryPerson.logid},
			#{deputyPerson.logid},
			#{authId}, 
			#{authName},
			#{authBegin},
			#{authEnd},
			#{authState}
		)
	</insert>
	
	<update id="update">
		UPDATE sys_office SET 
			parent_id = #{parent.logid}, 
			parent_ids = #{parentIds}, 
			area_id = #{area.logid}, 
			code = #{code}, 
			name = #{name}, 
			type = #{type}, 
			grade = #{grade}, 
			address = #{address}, 
			zip_code = #{zipCode}, 
			master = #{master}, 
			phone = #{phone}, 
			fax = #{fax}, 
			email = #{email}, 
			update_by = #{updateBy.logid}, 
			update_date = #{updateDate}, 
			remarks = #{remarks},
			useable=#{useable},
			primary_person=#{primaryPerson.logid},
			deputy_person=#{deputyPerson.logid},
			auth_id = #{authId}, 
			auth_name = #{authName},
			auth_begin=#{authBegin},
			auth_end=#{authEnd},
			auth_state=#{authState}
		WHERE logid = #{logid}
	</update>
	
	<update id="updateParentIds">
		UPDATE sys_office SET 
			parent_id = #{parent.logid}, 
			parent_ids = #{parentIds}
		WHERE logid = #{logid}
	</update>
	
	<update id="delete">
		delete from sys_office
		WHERE logid = #{logid} OR parent_ids LIKE 
					<if test="dbName == 'oracle'">'%,'||#{logid}||',%'</if>
					<if test="dbName == 'mssql'">'%,'+#{logid}+',%'</if>
					<if test="dbName == 'mysql'">CONCAT('%,', #{logid}, ',%')</if>
	</update>
	
</mapper>